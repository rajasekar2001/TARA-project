# Generated by Django 5.1.5 on 2025-04-08 05:29

import KeyUsers.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('BusinessPartner', '0026_alter_businesspartner_term'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='KeyUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='User/Profile')),
                ('user_code', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_state', models.CharField(choices=[('internal', 'INTERNAL USER'), ('external', 'EXTERNAL USER')], default='internal', max_length=50)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=15, null=True, validators=[KeyUsers.models.validate_mobile_no])),
                ('email_id', models.EmailField(blank=True, max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_only', models.BooleanField(default=False, verbose_name='View Only')),
                ('copy', models.BooleanField(default=False, verbose_name='Copy')),
                ('screenshot', models.BooleanField(default=False, verbose_name='Screenshot')),
                ('print_perm', models.BooleanField(default=False, verbose_name='Print')),
                ('download', models.BooleanField(default=False, verbose_name='Download')),
                ('share', models.BooleanField(default=False, verbose_name='Share')),
                ('edit', models.BooleanField(default=False, verbose_name='Edit')),
                ('delete', models.BooleanField(default=False, verbose_name='Delete')),
                ('manage_roles', models.BooleanField(default=False, verbose_name='Manage Roles')),
                ('approve', models.BooleanField(default=False, verbose_name='Approve')),
                ('reject', models.BooleanField(default=False, verbose_name='Reject')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive')),
                ('restore', models.BooleanField(default=False, verbose_name='Restore')),
                ('transfer', models.BooleanField(default=False, verbose_name='Transfer')),
                ('custom_access', models.BooleanField(default=False, verbose_name='Custom Access')),
                ('full_control', models.BooleanField(default=False, verbose_name='Full Control')),
                ('delete_flag', models.BooleanField(default=False)),
                ('bp_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='BusinessPartner.businesspartner')),
                ('groups', models.ManyToManyField(blank=True, related_name='KeyUsers', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='KeyUsers', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
